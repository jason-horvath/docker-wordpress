upstream php {
  server unix:/tmp/php-cgi.socket;
  server php:9000;
}

server {
  listen 80;
  server_name docker-wordpress.test;

  root /var/www/html;

  index index.php;

  location / {
    try_files $uri $uri/ /index.php?$args;
  }

  location ~ \.php$ {
    include fastcgi.conf;
    fastcgi_intercept_errors on;
    fastcgi_pass php;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}

server {
  listen 443 ssl;
  server_name docker-wordpress.test;

  root /var/www/html;

  index index.php;

  ## Hide wp-login.php from public
  set $disallow_wp_login 1;

  ## wp-login is used to logout with a get request action=logout
  if ($arg_action ~ "logout") {
    set $disallow_wp_login 0;
  }

  ## Logging in is a post request, wp-login.php access is needed
  if ($request_method ~ POST) {
    set $disallow_wp_login 0;
  }

  ## Rewrite wp-login if our disallow_wp_login is true
  if ($disallow_wp_login) {
    rewrite ^/wp-login.php / last;
  }

  ## Rewrite /ialp --> /wp-login.php
  rewrite /ialp /wp-login.php?$args last;

  location / {
    try_files $uri $uri/ /index.php?$args;
  }

  location ~ \.php$ {
    include fastcgi.conf;
    fastcgi_intercept_errors on;
    fastcgi_pass php;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }

  ssl_certificate /etc/nginx/certs/self-signed/docker-wordpress.test.pem;
  ssl_certificate_key /etc/nginx/certs/self-signed/docker-wordpress.test-key.pem;
}
